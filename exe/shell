#!/usr/bin/env ruby
require 'fileutils'

command, args = ENV["SSH_ORIGINAL_COMMAND"].to_s.split(" ", 2)
if command.to_s.empty?
  puts "Welcome to Dynosaur!"
  puts
  puts "Commands:"
  puts "  check"
  puts "  console"
  puts "  rake ARGS"
  puts
elsif command == 'console'
  args = args.split
  Dir.chdir("/app/#{args[0]}")
  exec File.expand_path("./../run_process_type #{args[0]} run console #{args[1..-1].join(" ")}", __FILE__)
elsif command == 'rake'
  args = args.split
  Dir.chdir("/app/#{args[0]}")
  exec File.expand_path("./../run_process_type #{args[0]} run rake #{args[1..-1].join(" ")}", __FILE__)
elsif command == 'check'
  args = args.split
  exec "foreman check -d /app/#{args[0]}"
elsif command == 'git-receive-pack'
  args = args[1..-2]
  repodir = File.join(ENV["HOME"], args)
  unless File.directory? repodir
    FileUtils.mkdir_p repodir
    `cd #{repodir} && git init --bare`
    File.open(File.join(repodir, "hooks", "post-receive"), 'w') do |f|
      f.puts "#!/bin/sh"
      f.puts "hook #{args}"
    end
    `chmod +x #{File.join(repodir, "hooks", "post-receive")}`
    #GIT_WORK_TREE=/var/www/www.example.org git checkout -f
  end

  Kernel.exec "git", "shell", "-c", ENV["SSH_ORIGINAL_COMMAND"]
elsif command == 'git-upload-pack'
  Kernel.exec "git", "shell", "-c", command
else
  $stderr.puts "Huh?"
end
